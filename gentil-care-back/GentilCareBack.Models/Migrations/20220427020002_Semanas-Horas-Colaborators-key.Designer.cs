// <auto-generated />
using System;
using GentilCareBack.Models.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GentilCareBack.Models.Migrations
{
    [DbContext(typeof(dbContextDataBase))]
    [Migration("20220427020002_Semanas-Horas-Colaborators-key")]
    partial class SemanasHorasColaboratorskey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GentilCareBack.Models.Entity.Addresses", b =>
                {
                    b.Property<long>("AddressesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("UsersId")
                        .HasColumnType("bigint");

                    b.Property<string>("calle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("colonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("exterior")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("interior")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("municipio")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressesId");

                    b.HasIndex("UsersId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.AparatoRespiratorio", b =>
                {
                    b.Property<long>("AparatoRespiratorioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("InterrogatoriosId")
                        .HasColumnType("bigint");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("valor")
                        .HasColumnType("bit");

                    b.HasKey("AparatoRespiratorioId");

                    b.HasIndex("InterrogatoriosId");

                    b.ToTable("AparatoRespiratorio");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Auths", b =>
                {
                    b.Property<long>("AuthsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("RolesId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UsersId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("verified")
                        .HasColumnType("bit");

                    b.HasKey("AuthsId");

                    b.HasIndex("RolesId");

                    b.HasIndex("UsersId")
                        .IsUnique()
                        .HasFilter("[UsersId] IS NOT NULL");

                    b.ToTable("Auths");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.CardioVascular", b =>
                {
                    b.Property<long>("CardioVascularId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("InterrogatoriosId")
                        .HasColumnType("bigint");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("valor")
                        .HasColumnType("bit");

                    b.HasKey("CardioVascularId");

                    b.HasIndex("InterrogatoriosId");

                    b.ToTable("CardioVascular");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Colaboradors", b =>
                {
                    b.Property<long>("ColaboradorsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("UsersId")
                        .HasColumnType("bigint");

                    b.Property<string>("address_fiscal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("costoConsulta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("especialidad")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pacientes")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("plataforma")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("rfc")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("tel_fijo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ColaboradorsId");

                    b.HasIndex("UsersId");

                    b.ToTable("Colaboradors");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Esfera_Psiquica", b =>
                {
                    b.Property<long>("Esfera_PsiquicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("InterrogatoriosId")
                        .HasColumnType("bigint");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(350)")
                        .HasMaxLength(350);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("valor")
                        .HasColumnType("bit");

                    b.HasKey("Esfera_PsiquicaId");

                    b.HasIndex("InterrogatoriosId");

                    b.ToTable("Esfera_Psiquica");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Especialidads", b =>
                {
                    b.Property<long>("EspecialidadsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("especialidad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EspecialidadsId");

                    b.ToTable("Especialidads");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Estudios", b =>
                {
                    b.Property<long>("EstudiosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("RecetasId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estudio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("identificador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("EstudiosId");

                    b.HasIndex("RecetasId");

                    b.ToTable("Estudios");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Farmacos", b =>
                {
                    b.Property<long>("FarmacosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("aplicacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("duracion")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("farmaco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("frecuencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modoAplicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FarmacosId");

                    b.ToTable("Farmacos");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Horas", b =>
                {
                    b.Property<long>("HorasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("SemanaId")
                        .HasColumnType("bigint");

                    b.Property<bool>("catorce")
                        .HasColumnType("bit");

                    b.Property<bool>("cero")
                        .HasColumnType("bit");

                    b.Property<bool>("cinco")
                        .HasColumnType("bit");

                    b.Property<bool>("cuatro")
                        .HasColumnType("bit");

                    b.Property<bool>("diecinueve")
                        .HasColumnType("bit");

                    b.Property<bool>("dieciocho")
                        .HasColumnType("bit");

                    b.Property<bool>("dieciseis")
                        .HasColumnType("bit");

                    b.Property<bool>("diecisiete")
                        .HasColumnType("bit");

                    b.Property<bool>("diez")
                        .HasColumnType("bit");

                    b.Property<bool>("doce")
                        .HasColumnType("bit");

                    b.Property<bool>("dos")
                        .HasColumnType("bit");

                    b.Property<bool>("nueve")
                        .HasColumnType("bit");

                    b.Property<bool>("ocho")
                        .HasColumnType("bit");

                    b.Property<bool>("once")
                        .HasColumnType("bit");

                    b.Property<bool>("quince")
                        .HasColumnType("bit");

                    b.Property<bool>("seis")
                        .HasColumnType("bit");

                    b.Property<bool>("siete")
                        .HasColumnType("bit");

                    b.Property<bool>("trece")
                        .HasColumnType("bit");

                    b.Property<bool>("tres")
                        .HasColumnType("bit");

                    b.Property<bool>("una")
                        .HasColumnType("bit");

                    b.Property<bool>("veinte")
                        .HasColumnType("bit");

                    b.Property<bool>("veintidos")
                        .HasColumnType("bit");

                    b.Property<bool>("veintitres")
                        .HasColumnType("bit");

                    b.Property<bool>("veintiuno")
                        .HasColumnType("bit");

                    b.HasKey("HorasId");

                    b.HasIndex("SemanaId");

                    b.ToTable("Horas");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Interrogatorios", b =>
                {
                    b.Property<long>("InterrogatoriosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ServiciosId")
                        .HasColumnType("bigint");

                    b.HasKey("InterrogatoriosId");

                    b.HasIndex("ServiciosId");

                    b.ToTable("Interrogatorios");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Medicamento", b =>
                {
                    b.Property<long>("MedicamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("existencia")
                        .HasColumnType("int");

                    b.Property<string>("farmaco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre_quimico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("presentacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedicamentoId");

                    b.ToTable("Medicamento");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Motivos", b =>
                {
                    b.Property<long>("MotivosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("idServicio")
                        .HasColumnType("bigint");

                    b.Property<string>("motivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MotivosId");

                    b.ToTable("Motivos");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.PielTegumentos", b =>
                {
                    b.Property<long>("PielTegumentosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("InterrogatoriosId")
                        .HasColumnType("bigint");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("valor")
                        .HasColumnType("bit");

                    b.HasKey("PielTegumentosId");

                    b.HasIndex("InterrogatoriosId");

                    b.ToTable("PielTegumentos");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Planes", b =>
                {
                    b.Property<long>("PlanesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.HasKey("PlanesId");

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Preguntas", b =>
                {
                    b.Property<long>("PreguntasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("UsersId")
                        .HasColumnType("bigint");

                    b.Property<string>("respuestaDos")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("respuestaTres")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("respuestaUno")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("PreguntasId");

                    b.HasIndex("UsersId");

                    b.ToTable("Preguntas");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Proveedor", b =>
                {
                    b.Property<long>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AddressesId")
                        .HasColumnType("bigint");

                    b.Property<string>("cellphone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estudio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("provedor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProveedorId");

                    b.HasIndex("AddressesId");

                    b.ToTable("Proveedor");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Recetas", b =>
                {
                    b.Property<long>("RecetasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("estudio_banco")
                        .HasColumnType("bigint");

                    b.Property<string>("indicaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("proxima_cita")
                        .HasColumnType("datetime2");

                    b.HasKey("RecetasId");

                    b.ToTable("Recetas");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Roles", b =>
                {
                    b.Property<long>("RolesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("role")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("RolesId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Semana", b =>
                {
                    b.Property<long>("SemanaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ColaboradorsId")
                        .HasColumnType("bigint");

                    b.HasKey("SemanaId");

                    b.HasIndex("ColaboradorsId");

                    b.ToTable("Semana");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Sentidos", b =>
                {
                    b.Property<long>("SentidosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("InterrogatoriosId")
                        .HasColumnType("bigint");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("valor")
                        .HasColumnType("bit");

                    b.HasKey("SentidosId");

                    b.HasIndex("InterrogatoriosId");

                    b.ToTable("Sentidos");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Servicios", b =>
                {
                    b.Property<long>("ServiciosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("FarmacosId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PlanesId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RecetasId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SignosvitalesId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServiciosId");

                    b.HasIndex("FarmacosId");

                    b.HasIndex("PlanesId");

                    b.HasIndex("RecetasId");

                    b.HasIndex("SignosvitalesId");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Signosvitales", b =>
                {
                    b.Property<long>("SignosvitalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("frecuenciaCardiaca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("frecuenciaRespiratoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("glucosa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("presionArterial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("saturacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("temperatura")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SignosvitalesId");

                    b.ToTable("Signosvitales");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.SintomasGenerales", b =>
                {
                    b.Property<long>("SintomasGeneralesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("InterrogatoriosId")
                        .HasColumnType("bigint");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("valor")
                        .HasColumnType("bit");

                    b.HasKey("SintomasGeneralesId");

                    b.HasIndex("InterrogatoriosId");

                    b.ToTable("SintomasGenerales");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.SistemaDigestivo", b =>
                {
                    b.Property<long>("SistemaDigestivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("InterrogatoriosId")
                        .HasColumnType("bigint");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(350)")
                        .HasMaxLength(350);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("valor")
                        .HasColumnType("bit");

                    b.HasKey("SistemaDigestivoId");

                    b.HasIndex("InterrogatoriosId");

                    b.ToTable("SistemaDigestivo");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.SistemaEmatopoyetico", b =>
                {
                    b.Property<long>("SistemaEmatopoyeticoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("InterrogatoriosId")
                        .HasColumnType("bigint");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(350)")
                        .HasMaxLength(350);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("valor")
                        .HasColumnType("bit");

                    b.HasKey("SistemaEmatopoyeticoId");

                    b.HasIndex("InterrogatoriosId");

                    b.ToTable("SistemaEmatopoyetico");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.SistemaEndocrino", b =>
                {
                    b.Property<long>("SistemaEndocrinoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("InterrogatoriosId")
                        .HasColumnType("bigint");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("valor")
                        .HasColumnType("bit");

                    b.HasKey("SistemaEndocrinoId");

                    b.HasIndex("InterrogatoriosId");

                    b.ToTable("SistemaEndocrino");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.SistemaMusculoEsqueletico", b =>
                {
                    b.Property<long>("SistemaMusculoEsqueleticoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("InterrogatoriosId")
                        .HasColumnType("bigint");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(350)")
                        .HasMaxLength(350);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("valor")
                        .HasColumnType("bit");

                    b.HasKey("SistemaMusculoEsqueleticoId");

                    b.HasIndex("InterrogatoriosId");

                    b.ToTable("SistemaMusculoEsqueletico");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.SistemaNervioso", b =>
                {
                    b.Property<long>("SistemaNerviosoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("InterrogatoriosId")
                        .HasColumnType("bigint");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(350)")
                        .HasMaxLength(350);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("valor")
                        .HasColumnType("bit");

                    b.HasKey("SistemaNerviosoId");

                    b.HasIndex("InterrogatoriosId");

                    b.ToTable("SistemaNervioso");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Users", b =>
                {
                    b.Property<long>("UsersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("cellphone")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("customerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(350)")
                        .HasMaxLength(350);

                    b.Property<string>("especialidades")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("filename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firsname")
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parentezco")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("pin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("UsersId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Addresses", b =>
                {
                    b.HasOne("GentilCareBack.Models.Entity.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.AparatoRespiratorio", b =>
                {
                    b.HasOne("GentilCareBack.Models.Entity.Interrogatorios", "Interrogatorios")
                        .WithMany("AparatoRespiratorio")
                        .HasForeignKey("InterrogatoriosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Auths", b =>
                {
                    b.HasOne("GentilCareBack.Models.Entity.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("RolesId");

                    b.HasOne("GentilCareBack.Models.Entity.Users", null)
                        .WithOne("Auths")
                        .HasForeignKey("GentilCareBack.Models.Entity.Auths", "UsersId");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.CardioVascular", b =>
                {
                    b.HasOne("GentilCareBack.Models.Entity.Interrogatorios", "Interrogatorios")
                        .WithMany("CardioVascular")
                        .HasForeignKey("InterrogatoriosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Colaboradors", b =>
                {
                    b.HasOne("GentilCareBack.Models.Entity.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Esfera_Psiquica", b =>
                {
                    b.HasOne("GentilCareBack.Models.Entity.Interrogatorios", "Interrogatorios")
                        .WithMany("Esfera_Psiquica")
                        .HasForeignKey("InterrogatoriosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Estudios", b =>
                {
                    b.HasOne("GentilCareBack.Models.Entity.Recetas", null)
                        .WithMany("Estudios")
                        .HasForeignKey("RecetasId");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Horas", b =>
                {
                    b.HasOne("GentilCareBack.Models.Entity.Semana", null)
                        .WithMany("Horas")
                        .HasForeignKey("SemanaId");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Interrogatorios", b =>
                {
                    b.HasOne("GentilCareBack.Models.Entity.Servicios", "Servicios")
                        .WithMany()
                        .HasForeignKey("ServiciosId");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.PielTegumentos", b =>
                {
                    b.HasOne("GentilCareBack.Models.Entity.Interrogatorios", "Interrogatorios")
                        .WithMany("PielTegumentos")
                        .HasForeignKey("InterrogatoriosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Preguntas", b =>
                {
                    b.HasOne("GentilCareBack.Models.Entity.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Proveedor", b =>
                {
                    b.HasOne("GentilCareBack.Models.Entity.Addresses", "Addresses")
                        .WithMany()
                        .HasForeignKey("AddressesId");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Semana", b =>
                {
                    b.HasOne("GentilCareBack.Models.Entity.Colaboradors", "Colaboradors")
                        .WithMany()
                        .HasForeignKey("ColaboradorsId");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Sentidos", b =>
                {
                    b.HasOne("GentilCareBack.Models.Entity.Interrogatorios", "Interrogatorios")
                        .WithMany("Sentidos")
                        .HasForeignKey("InterrogatoriosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.Servicios", b =>
                {
                    b.HasOne("GentilCareBack.Models.Entity.Farmacos", "Farmacos")
                        .WithMany("Servicios")
                        .HasForeignKey("FarmacosId");

                    b.HasOne("GentilCareBack.Models.Entity.Planes", "Planes")
                        .WithMany("Servicios")
                        .HasForeignKey("PlanesId");

                    b.HasOne("GentilCareBack.Models.Entity.Recetas", null)
                        .WithMany("Servicios")
                        .HasForeignKey("RecetasId");

                    b.HasOne("GentilCareBack.Models.Entity.Signosvitales", "Signosvitales")
                        .WithMany("servicio")
                        .HasForeignKey("SignosvitalesId");
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.SintomasGenerales", b =>
                {
                    b.HasOne("GentilCareBack.Models.Entity.Interrogatorios", "Interrogatorios")
                        .WithMany("SintomasGenerales")
                        .HasForeignKey("InterrogatoriosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.SistemaDigestivo", b =>
                {
                    b.HasOne("GentilCareBack.Models.Entity.Interrogatorios", "Interrogatorios")
                        .WithMany("SistemaDigestivo")
                        .HasForeignKey("InterrogatoriosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.SistemaEmatopoyetico", b =>
                {
                    b.HasOne("GentilCareBack.Models.Entity.Interrogatorios", "Interrogatorios")
                        .WithMany("SistemaEmatopoyetico")
                        .HasForeignKey("InterrogatoriosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.SistemaEndocrino", b =>
                {
                    b.HasOne("GentilCareBack.Models.Entity.Interrogatorios", "Interrogatorios")
                        .WithMany("SistemaEndocrino")
                        .HasForeignKey("InterrogatoriosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.SistemaMusculoEsqueletico", b =>
                {
                    b.HasOne("GentilCareBack.Models.Entity.Interrogatorios", "Interrogatorios")
                        .WithMany("SistemaMusculoEsqueletico")
                        .HasForeignKey("InterrogatoriosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GentilCareBack.Models.Entity.SistemaNervioso", b =>
                {
                    b.HasOne("GentilCareBack.Models.Entity.Interrogatorios", "Interrogatorios")
                        .WithMany("SistemaNervioso")
                        .HasForeignKey("InterrogatoriosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
